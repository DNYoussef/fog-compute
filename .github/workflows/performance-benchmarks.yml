name: Fog-Compute Performance Benchmarks

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * *'  # Daily at 2 AM

jobs:
  benchmark-suite:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
    - uses: actions/checkout@v3

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Dependencies
      run: |
        cargo build --release
        npm install -g ts-node typescript
        pip install asyncio

    - name: Run Betanet Throughput Benchmark
      run: |
        cd benchmarks
        cargo run --release --bin betanet_throughput

    - name: Run BitChat Latency Benchmark
      run: |
        cd benchmarks
        ts-node bitchat_latency.ts

    - name: Run Control Panel Rendering Benchmark
      run: |
        cd benchmarks
        ts-node control_panel_render.ts

    - name: Run System Integration Benchmark
      run: |
        cd benchmarks
        python system_integration.py

    - name: Consolidate Results
      run: |
        cd benchmarks
        chmod +x run_all_benchmarks.sh
        ./run_all_benchmarks.sh

    - name: Check Performance Targets
      run: |
        cd benchmarks
        python -c "
        import json
        import sys

        # Load all reports
        reports = {}

        # Betanet - target: 25k pps
        with open('betanet_throughput_report.json') as f:
            betanet = json.load(f)
            if not betanet['performance_gate']['pass']:
                print('‚ùå Betanet throughput below 25k pps target')
                sys.exit(1)

        # BitChat - target: <50ms local, <200ms global
        with open('bitchat_latency_report.json') as f:
            bitchat = json.load(f)
            if not bitchat['performance_gate']['all_tests_pass']:
                print('‚ùå BitChat latency exceeds targets')
                sys.exit(1)

        # Control Panel - target: 60fps, <100ms interactions
        with open('control_panel_render_report.json') as f:
            panel = json.load(f)
            if not panel['performance_gate']['overall_pass']:
                print('‚ùå Control Panel performance below targets')
                sys.exit(1)

        # System Integration
        with open('system_integration_report.json') as f:
            integration = json.load(f)
            if not integration['performance_gate']['all_tests_pass']:
                print('‚ùå System integration tests failed')
                sys.exit(1)

        print('‚úÖ All performance targets met!')
        "

    - name: Upload Benchmark Reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: fog-compute-benchmarks
        path: |
          benchmarks/*_report.json
          benchmarks/consolidated_benchmark_report.json

    - name: Performance Dashboard Comment
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');

          const betanet = JSON.parse(fs.readFileSync('benchmarks/betanet_throughput_report.json', 'utf8'));
          const bitchat = JSON.parse(fs.readFileSync('benchmarks/bitchat_latency_report.json', 'utf8'));
          const panel = JSON.parse(fs.readFileSync('benchmarks/control_panel_render_report.json', 'utf8'));

          const comment = `
          ## üöÄ Fog-Compute Performance Benchmark Results

          ### Betanet Throughput
          - **Target:** 25,000 pps
          - **Actual:** ${betanet.single_stream.throughput_pps.toFixed(0)} pps
          - **Status:** ${betanet.performance_gate.pass ? '‚úÖ PASS' : '‚ùå FAIL'}
          - **P99 Latency:** ${betanet.single_stream.p99_latency_us} Œºs

          ### BitChat P2P Messaging
          - **Local P2P:** ${bitchat.results.find(r => r.test === 'local_p2p')?.p99_ms || 'N/A'}ms (target: <50ms)
          - **Global P2P:** ${bitchat.results.find(r => r.test === 'global_p2p')?.p99_ms || 'N/A'}ms (target: <200ms)
          - **Status:** ${bitchat.performance_gate.all_tests_pass ? '‚úÖ PASS' : '‚ùå FAIL'}

          ### Control Panel Rendering
          - **FPS:** ${panel.render_results[0]?.fps || 'N/A'} (target: 60)
          - **Interaction P99:** ${panel.interaction_results[0]?.p99_ms || 'N/A'}ms (target: <100ms)
          - **Status:** ${panel.performance_gate.overall_pass ? '‚úÖ PASS' : '‚ùå FAIL'}

          [üìä View detailed reports in artifacts]
          `;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

  continuous-monitoring:
    runs-on: ubuntu-latest
    needs: benchmark-suite
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v3

    - name: Download Benchmark Results
      uses: actions/download-artifact@v3
      with:
        name: fog-compute-benchmarks
        path: ./benchmarks

    - name: Update Performance Metrics
      run: |
        # Store metrics in time-series database or monitoring system
        echo "Updating performance metrics..."

    - name: Alert on Performance Degradation
      run: |
        # Send alerts if performance degrades below thresholds
        echo "Checking for performance degradation..."
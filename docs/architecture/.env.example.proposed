# Environment Configuration Template
# Copy this file to .env and fill in your values
# DO NOT commit .env to version control

# ============================================
# DEPLOYMENT ENVIRONMENT
# ============================================
# Options: development, staging, production
ENVIRONMENT=development

# Build metadata (set by CI/CD)
BUILD_DATE=2025-10-21T00:00:00Z
VCS_REF=main
VERSION=1.0.0

# ============================================
# POSTGRESQL DATABASE
# ============================================
POSTGRES_USER=fog_user
POSTGRES_PASSWORD=CHANGE_ME_STRONG_PASSWORD
POSTGRES_DB=fog_compute
POSTGRES_PORT=5432

# Production: Use different database name or separate server
# POSTGRES_DB=fog_compute_prod

# ============================================
# BACKEND (FastAPI)
# ============================================
# Build target: development or production
BUILD_TARGET=development

# API Configuration
API_HOST=0.0.0.0
API_PORT=8000
BACKEND_PORT=8000

# Logging
LOG_LEVEL=DEBUG
LOG_FORMAT=console

# Workers (production)
WORKERS=4

# Security
ALLOWED_HOSTS=*
CORS_ORIGINS=http://localhost:3000,http://localhost:8000

# JWT (if using authentication)
JWT_SECRET_KEY=CHANGE_ME_RANDOM_SECRET
JWT_ALGORITHM=HS256
JWT_EXPIRATION_MINUTES=30

# ============================================
# FRONTEND (Next.js)
# ============================================
# API URL (for browser)
NEXT_PUBLIC_API_URL=http://localhost:8000

# Node environment
NODE_ENV=development

# Telemetry
NEXT_TELEMETRY_DISABLED=1

# Frontend port
FRONTEND_PORT=3000

# ============================================
# REDIS
# ============================================
REDIS_PASSWORD=CHANGE_ME_REDIS_PASSWORD
REDIS_PORT=6379

# ============================================
# MONITORING - PROMETHEUS
# ============================================
PROMETHEUS_PORT=9090

# Retention
PROMETHEUS_RETENTION_TIME=30d
PROMETHEUS_RETENTION_SIZE=10GB

# ============================================
# MONITORING - GRAFANA
# ============================================
# Admin credentials
GF_SECURITY_ADMIN_USER=admin
GF_SECURITY_ADMIN_PASSWORD=CHANGE_ME_GRAFANA_PASSWORD

# Server configuration
GF_SERVER_ROOT_URL=http://localhost:3001
GF_SERVER_DOMAIN=localhost

# Logging
GF_LOG_LEVEL=debug

# Port
GRAFANA_PORT=3001

# SMTP (optional - for alerts)
GF_SMTP_ENABLED=false
GF_SMTP_HOST=smtp.gmail.com:587
GF_SMTP_USER=
GF_SMTP_PASSWORD=
GF_SMTP_FROM_ADDRESS=grafana@fogcompute.io

# ============================================
# MONITORING - LOKI
# ============================================
LOKI_PORT=3100

# ============================================
# BETANET MIXNET
# ============================================
# Enable/disable betanet
BETANET_ENABLED=false

# Node ports
BETANET_NODE1_PORT=9001
BETANET_NODE2_PORT=9002
BETANET_NODE3_PORT=9003

# Metrics ports
BETANET_NODE1_METRICS_PORT=9101
BETANET_NODE2_METRICS_PORT=9102
BETANET_NODE3_METRICS_PORT=9103

# Logging
RUST_LOG=info
RUST_BACKTRACE=0

# Performance tuning
PIPELINE_WORKERS=4
BATCH_SIZE=128
POOL_SIZE=1024
MAX_QUEUE_DEPTH=10000
TARGET_THROUGHPUT=25000

# Network configuration
MAX_PACKET_SIZE=65536
KEEPALIVE_INTERVAL=30
CONNECTION_TIMEOUT=60

# VRF parameters
VRF_DIFFICULTY=4
RELAY_SELECTION_POOL=100

# Metrics
METRICS_ENABLED=true
METRICS_PORT=9091

# Resource limits per node
BETANET_NODE1_CPUS=2
BETANET_NODE1_MEMORY=2G
BETANET_NODE2_CPUS=2
BETANET_NODE2_MEMORY=2G
BETANET_NODE3_CPUS=2
BETANET_NODE3_MEMORY=2G

# Load generator (testing)
BETANET_LOAD_RATE=100
BETANET_LOAD_DURATION=0
BETANET_PACKET_SIZE=1024

# Monitor dashboard
BETANET_MONITOR_PORT=8080

# ============================================
# DEVELOPMENT TOOLS
# ============================================
# pgAdmin
PGADMIN_EMAIL=admin@fogcompute.local
PGADMIN_PASSWORD=admin
PGADMIN_PORT=5050

# Redis Commander
REDIS_COMMANDER_PORT=8081

# Mailhog (email testing)
MAILHOG_SMTP_PORT=1025
MAILHOG_UI_PORT=8025

# ============================================
# PRODUCTION SETTINGS
# ============================================
# Only used when deploying with docker-compose.prod.yml

# Nginx
NGINX_PORT_HTTP=80
NGINX_PORT_HTTPS=443

# SSL/TLS
SSL_CERTIFICATE_PATH=/etc/nginx/ssl/cert.pem
SSL_CERTIFICATE_KEY_PATH=/etc/nginx/ssl/key.pem

# Secrets (paths to secret files)
POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
GRAFANA_PASSWORD_FILE=/run/secrets/grafana_password
GRAFANA_SECRET_KEY_FILE=/run/secrets/grafana_secret_key

# ============================================
# CLOUD DEPLOYMENT (Optional)
# ============================================
# AWS
AWS_REGION=us-east-1
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=

# Database (RDS)
# DATABASE_URL=postgresql+asyncpg://user:password@rds-endpoint:5432/fog_compute

# Redis (ElastiCache)
# REDIS_URL=redis://elasticache-endpoint:6379

# S3 (for file storage)
S3_BUCKET_NAME=
S3_ENDPOINT_URL=

# ============================================
# OBSERVABILITY
# ============================================
# Sentry (error tracking)
SENTRY_DSN=
SENTRY_ENVIRONMENT=development

# Datadog (APM)
DD_AGENT_HOST=
DD_API_KEY=
DD_SERVICE=fog-compute

# New Relic
NEW_RELIC_LICENSE_KEY=
NEW_RELIC_APP_NAME=fog-compute

# ============================================
# FEATURE FLAGS
# ============================================
FEATURE_BETANET_ENABLED=false
FEATURE_BITCHAT_ENABLED=false
FEATURE_TOKENOMICS_ENABLED=false
FEATURE_IDLE_COMPUTE_ENABLED=false

# ============================================
# TESTING
# ============================================
# Test database
TEST_DATABASE_URL=postgresql+asyncpg://fog_user:fog_password@postgres:5432/fog_compute_test

# E2E testing
E2E_BASE_URL=http://localhost:3000
E2E_API_URL=http://localhost:8000

# ============================================
# NOTES
# ============================================
# 1. NEVER commit this file with real secrets to version control
# 2. Use strong, randomly generated passwords for all secrets
# 3. Rotate secrets regularly in production
# 4. Use secret management tools (AWS Secrets Manager, HashiCorp Vault) in production
# 5. Different .env files for different environments:
#    - .env.development (local dev)
#    - .env.staging (staging server)
#    - .env.production (production server - NEVER in git)

# Generate strong passwords:
#   openssl rand -hex 32
#   openssl rand -base64 32

# Validate configuration:
#   docker-compose config

# Check what environment variables are used:
#   docker-compose config | grep -E '^\s+[A-Z_]+:'

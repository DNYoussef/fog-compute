version: '3.8'

services:
  # Betanet Mixnode 1 (Entry)
  betanet-mixnode-1:
    build:
      context: .
      dockerfile: Dockerfile.betanet
    container_name: betanet-mixnode-1
    ports:
      - "9001:9001"
    environment:
      - NODE_TYPE=entry
      - NODE_PORT=9001
      - RUST_LOG=info
      - PIPELINE_WORKERS=4
      - BATCH_SIZE=128
      - POOL_SIZE=1024
      - MAX_QUEUE_DEPTH=10000
      - TARGET_THROUGHPUT=25000
    networks:
      - betanet
    volumes:
      - ./config/betanet-1:/config
      - ./data/betanet-1:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Betanet Mixnode 2 (Middle)
  betanet-mixnode-2:
    build:
      context: .
      dockerfile: Dockerfile.betanet
    container_name: betanet-mixnode-2
    ports:
      - "9002:9002"
    environment:
      - NODE_TYPE=middle
      - NODE_PORT=9002
      - RUST_LOG=info
      - PIPELINE_WORKERS=4
      - BATCH_SIZE=128
      - POOL_SIZE=1024
      - MAX_QUEUE_DEPTH=10000
      - TARGET_THROUGHPUT=25000
    networks:
      - betanet
    volumes:
      - ./config/betanet-2:/config
      - ./data/betanet-2:/data
    restart: unless-stopped
    depends_on:
      - betanet-mixnode-1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Betanet Mixnode 3 (Exit)
  betanet-mixnode-3:
    build:
      context: .
      dockerfile: Dockerfile.betanet
    container_name: betanet-mixnode-3
    ports:
      - "9003:9003"
    environment:
      - NODE_TYPE=exit
      - NODE_PORT=9003
      - RUST_LOG=info
      - PIPELINE_WORKERS=4
      - BATCH_SIZE=128
      - POOL_SIZE=1024
      - MAX_QUEUE_DEPTH=10000
      - TARGET_THROUGHPUT=25000
    networks:
      - betanet
    volumes:
      - ./config/betanet-3:/config
      - ./data/betanet-3:/data
    restart: unless-stopped
    depends_on:
      - betanet-mixnode-2
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9003/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: betanet-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - betanet
    restart: unless-stopped

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: betanet-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./config/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./config/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - betanet
    depends_on:
      - prometheus
    restart: unless-stopped

networks:
  betanet:
    driver: bridge
    ipam:
      config:
        - subnet: 172.30.0.0/16

volumes:
  prometheus-data:
  grafana-data: